load("//bazel:swift_cc_defs.bzl", "UNIT", "swift_cc_library", "swift_cc_test")

swift_cc_library(
    name = "albatross",
    hdrs = [
        "include/albatross/Common",
        "include/albatross/Core",
        "include/albatross/CovarianceFunctions",
        "include/albatross/Dataset",
        "include/albatross/Distribution",
        "include/albatross/Evaluation",
        "include/albatross/ForwardDeclarations",
        "include/albatross/GP",
        "include/albatross/Graph",
        "include/albatross/Indexing",
        "include/albatross/LeastSquares",
        "include/albatross/NullModel",
        "include/albatross/PatchworkGP",
        "include/albatross/Ransac",
        "include/albatross/Samplers",
        "include/albatross/SparseGP",
        "include/albatross/Stats",
        "include/albatross/Tune",
        "include/albatross/serialize/Common",
        "include/albatross/serialize/Core",
        "include/albatross/serialize/Evaluation",
        "include/albatross/serialize/GP",
        "include/albatross/serialize/LeastSquares",
        "include/albatross/serialize/Ransac",
        "include/albatross/src/cereal/block_utils.hpp",
        "include/albatross/src/cereal/dataset.hpp",
        "include/albatross/src/cereal/distribution.hpp",
        "include/albatross/src/cereal/eigen.hpp",
        "include/albatross/src/cereal/evaluation.hpp",
        "include/albatross/src/cereal/fit_model.hpp",
        "include/albatross/src/cereal/gp.hpp",
        "include/albatross/src/cereal/least_squares.hpp",
        "include/albatross/src/cereal/model.hpp",
        "include/albatross/src/cereal/parameters.hpp",
        "include/albatross/src/cereal/priors.hpp",
        "include/albatross/src/cereal/ransac.hpp",
        "include/albatross/src/cereal/representations.hpp",
        "include/albatross/src/cereal/serializable_ldlt.hpp",
        "include/albatross/src/cereal/traits.hpp",
        "include/albatross/src/cereal/variant.hpp",
        "include/albatross/src/core/concatenate.hpp",
        "include/albatross/src/core/dataset.hpp",
        "include/albatross/src/core/declarations.hpp",
        "include/albatross/src/core/distribution.hpp",
        "include/albatross/src/core/fit_model.hpp",
        "include/albatross/src/core/keys.hpp",
        "include/albatross/src/core/model.hpp",
        "include/albatross/src/core/parameter_handling_mixin.hpp",
        "include/albatross/src/core/parameter_macros.hpp",
        "include/albatross/src/core/parameters.hpp",
        "include/albatross/src/core/prediction.hpp",
        "include/albatross/src/core/priors.hpp",
        "include/albatross/src/core/traits.hpp",
        "include/albatross/src/core/transformed_distribution.hpp",
        "include/albatross/src/covariance_functions/call_trace.hpp",
        "include/albatross/src/covariance_functions/callers.hpp",
        "include/albatross/src/covariance_functions/covariance_function.hpp",
        "include/albatross/src/covariance_functions/distance_metrics.hpp",
        "include/albatross/src/covariance_functions/linear_combination.hpp",
        "include/albatross/src/covariance_functions/mean_function.hpp",
        "include/albatross/src/covariance_functions/measurement.hpp",
        "include/albatross/src/covariance_functions/noise.hpp",
        "include/albatross/src/covariance_functions/nugget.hpp",
        "include/albatross/src/covariance_functions/polynomials.hpp",
        "include/albatross/src/covariance_functions/radial.hpp",
        "include/albatross/src/covariance_functions/representations.hpp",
        "include/albatross/src/covariance_functions/scaling_function.hpp",
        "include/albatross/src/covariance_functions/traits.hpp",
        "include/albatross/src/details/error_handling.hpp",
        "include/albatross/src/details/method_inspection_macros.hpp",
        "include/albatross/src/details/traits.hpp",
        "include/albatross/src/eigen/serializable_ldlt.hpp",
        "include/albatross/src/evaluation/cross_validation.hpp",
        "include/albatross/src/evaluation/cross_validation_utils.hpp",
        "include/albatross/src/evaluation/differential_entropy.hpp",
        "include/albatross/src/evaluation/folds.hpp",
        "include/albatross/src/evaluation/likelihood.hpp",
        "include/albatross/src/evaluation/model_metrics.hpp",
        "include/albatross/src/evaluation/prediction_metrics.hpp",
        "include/albatross/src/evaluation/traits.hpp",
        "include/albatross/src/graph/minimum_spanning_tree.hpp",
        "include/albatross/src/indexing/apply.hpp",
        "include/albatross/src/indexing/declarations.hpp",
        "include/albatross/src/indexing/filter.hpp",
        "include/albatross/src/indexing/group_by.hpp",
        "include/albatross/src/indexing/subset.hpp",
        "include/albatross/src/indexing/traits.hpp",
        "include/albatross/src/models/conditional_gaussian.hpp",
        "include/albatross/src/models/gp.hpp",
        "include/albatross/src/models/least_squares.hpp",
        "include/albatross/src/models/null_model.hpp",
        "include/albatross/src/models/patchwork_gp.hpp",
        "include/albatross/src/models/patchwork_gp_details.hpp",
        "include/albatross/src/models/ransac.hpp",
        "include/albatross/src/models/ransac_gp.hpp",
        "include/albatross/src/models/sparse_gp.hpp",
        "include/albatross/src/samplers/callbacks.hpp",
        "include/albatross/src/samplers/ensemble.hpp",
        "include/albatross/src/samplers/initialization.hpp",
        "include/albatross/src/samplers/state.hpp",
        "include/albatross/src/stats/chi_squared.hpp",
        "include/albatross/src/stats/gauss_legendre.hpp",
        "include/albatross/src/stats/gaussian.hpp",
        "include/albatross/src/stats/incomplete_gamma.hpp",
        "include/albatross/src/stats/ks_test.hpp",
        "include/albatross/src/tune/finite_difference.hpp",
        "include/albatross/src/tune/greedy_tuner.hpp",
        "include/albatross/src/tune/tune.hpp",
        "include/albatross/src/tune/tuning_metrics.hpp",
        "include/albatross/src/utils/async_utils.hpp",
        "include/albatross/src/utils/block_utils.hpp",
        "include/albatross/src/utils/csv_utils.hpp",
        "include/albatross/src/utils/eigen_utils.hpp",
        "include/albatross/src/utils/linalg_utils.hpp",
        "include/albatross/src/utils/map_utils.hpp",
        "include/albatross/src/utils/random_utils.hpp",
        "include/albatross/src/utils/variant_utils.hpp",
        "include/albatross/src/utils/vector_utils.hpp",
        "include/albatross/tests/Utils",
        "include/albatross/utils/AsyncUtils",
        "include/albatross/utils/CsvUtils",
        "include/albatross/utils/LinalgUtils",
        "include/albatross/utils/MapUtils",
        "include/albatross/utils/RandomUtils",
        "include/albatross/utils/VariantUtils",
    ],
    includes = [
        "include",
        "tests",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@cereal",
        "@eigen",
        "@fast-cpp-csv-parser",
        "@gzip",
        "@nlopt",
        "@variant",
    ],
)

swift_cc_test(
    name = "albatorss-test",
    srcs = [
        "tests/mock_model.h",
        "tests/test_apply.cc",
        "tests/test_async_utils.cc",
        "tests/test_block_utils.cc",
        "tests/test_call_trace.cc",
        "tests/test_callers.cc",
        "tests/test_concatenate.cc",
        "tests/test_conditional_gaussian.cc",
        "tests/test_core_dataset.cc",
        "tests/test_core_distribution.cc",
        "tests/test_core_distribution.h",
        "tests/test_core_model.cc",
        "tests/test_covariance_function.cc",
        "tests/test_covariance_functions.cc",
        "tests/test_covariance_utils.h",
        "tests/test_cross_validation.cc",
        "tests/test_csv_utils.cc",
        "tests/test_distance_metrics.cc",
        "tests/test_eigen_utils.cc",
        "tests/test_error_handling.cc",
        "tests/test_evaluate.cc",
        "tests/test_gp.cc",
        "tests/test_group_by.cc",
        "tests/test_indexing.cc",
        "tests/test_linalg_utils.cc",
        "tests/test_map_utils.cc",
        "tests/test_minimum_spanning_tree.cc",
        "tests/test_model_adapter.cc",
        "tests/test_model_metrics.cc",
        "tests/test_models.cc",
        "tests/test_models.h",
        "tests/test_parameter_handling_mixin.cc",
        "tests/test_patchwork_gp.cc",
        "tests/test_prediction.cc",
        "tests/test_radial.cc",
        "tests/test_random_utils.cc",
        "tests/test_ransac.cc",
        "tests/test_samplers.cc",
        "tests/test_scaling_function.cc",
        "tests/test_serializable_ldlt.cc",
        "tests/test_serialize.cc",
        "tests/test_serialize.h",
        "tests/test_sparse_gp.cc",
        "tests/test_stats.cc",
        "tests/test_traits_cereal.cc",
        "tests/test_traits_core.cc",
        "tests/test_traits_covariance_functions.cc",
        "tests/test_traits_details.cc",
        "tests/test_traits_evaluation.cc",
        "tests/test_traits_indexing.cc",
        "tests/test_tune.cc",
        "tests/test_utils.h",
        "tests/test_variant_utils.cc",
    ],
    copts = ["-std=c++14"],
    includes = ["tests"],
    linkopts = ["-lz"],
    type = UNIT,
    deps = [
        ":albatross",
        "@gtest//:gtest_main",
    ],

