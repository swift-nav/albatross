name: CI

on:
  pull_request: ~
  push:
    branches:
      - 'master'

jobs:

  ubuntu-gcc6:
    runs-on: ubuntu-18.04
    steps:

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Install gcc-6
        run: |
          sudo apt-get update && \
          sudo apt-get install build-essential software-properties-common -y && \
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
          sudo apt-get update && \
          sudo apt-get install gcc-6 g++-6 -y && \
          sudo apt-get install clang-6.0 clang-format-6.0 clang-tidy-6.0 && \
          gcc -v
      - name: Run build
        env:
          CC: gcc-6
          CXX: g++-6
          TESTENV: gcc6
          GCCVER: "6"
        run: |
          bash ./ci/run_tests.sh
          bash ./ci/ensure_formated.sh
          bash ./ci/ensure_copyright.sh

  ubuntu-clang6:
    runs-on: ubuntu-18.04
    steps:

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Install clang-6
        run: |
          sudo apt-get update && \
          sudo apt-get install build-essential software-properties-common -y && \
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
          sudo apt-get update && \
          sudo apt-get install clang-6.0 clang-format-6.0 clang-tidy-6.0 && \
          gcc -v
      - name: Run build
        env:
          CC: clang-6.0
          CXX: clang++-6.0
          TESTENV: clang6
        run: |
          bash ./ci/run_tests.sh
          bash ./ci/ensure_formated.sh
          bash ./ci/ensure_copyright.sh

  osx-clang:
    runs-on: macOS-latest
    steps:

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: check clang
        run: |
          clang --version
      - name: Run build
        env:
          CC: clang
          CXX: clang++
          TESTENV: clang
        run: |
          bash ./ci/run_tests.sh

  ubuntu-build-documentation:
    runs-on: "ubuntu-18.04"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.SSH_KEY }}

      - name: Install Prerequisites
        run: |
          sudo apt-get update && \
          sudo apt-get install build-essential software-properties-common -y && \
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
          sudo apt-get update
          
      - name: Build Docs
        run: |
          conda env create --file ./ci/albatross_docs_environment.yml
          conda activate albatross
          cd doc
          make html

